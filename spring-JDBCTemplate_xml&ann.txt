JDBCTemplate *详见test/com/qyj/test/JdbcTemplateTest
    1.概述
        它是spring框架中提供的一个对象,是对原始繁琐的JDBC API对象的简单封装
        例如:操作sql数据库的JdbcTemplate和HibernateTemplate,操作nosql数据库的RedisTemplate,操作消息队列的JmsTemplate
    2.JdbcTemplate开发步骤
        1.导入spring-jdbc和spring-tx(事务)坐标
            <dependency>
              <groupId>org.springframework</groupId>
              <artifactId>spring-jdbc</artifactId>
              <version>5.2.12.RELEASE</version>
            </dependency>
            <dependency>
              <groupId>org.springframework</groupId>
              <artifactId>spring-tx</artifactId>
              <version>5.2.12.RELEASE</version>
            </dependency>
        2.创建数据库表和实体
        3.创建JdbcTemplate对象
            JdbcTemplate jdbcTemplate = new JdbcTemplate();
            jdbcTemplate.setDataSource(dataSource);
        4.执行数据库操作
            int row = jdbcTemplate.update("insert into users values(?,?,?)",3,"zhaoliu","456789");
            System.out.println(row);

JDBCTemplate xml的配置步骤
    1.配置文件详见 spring-jdbc/src/test/resources/.
    2.在执行文件中配置路径
        @ContextConfiguration("classpath:applicationContext.xml")


JDBCTemplate ann的配置步骤
    *好像只要把配置文件改成class配置就好了
    1.配置文件详见 spring-jdbc/src/test/java/com/qyj/config/JdbcTemplateConfig.java
    2.在执行文件中配置路径
        @ContextConfiguration(classes = JdbcTemplateConfig.class)

    数据库操作
        *详见com.qyj.test.JdbcTemplateCRUDTest
        更新:
            jdbcTemplate.update(sql,params)
        查询操作:
            jdbcTemplate.query(sql,Mapper,params)
                *封装成指定javaBean
            jdbcTemplate.queryForList(sql,params)
                *封装成list
            jdbcTemplate.queryForMap(sql,params)
                *封装成map
            jdbcTemplate.queryForObject(sql,Mapper,params)
                *封装成指定对象,但是只能封装一个




